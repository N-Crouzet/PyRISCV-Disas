# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_riscv_disas')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_riscv_disas')
    _riscv_disas = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_riscv_disas', [dirname(__file__)])
        except ImportError:
            import _riscv_disas
            return _riscv_disas
        try:
            _mod = imp.load_module('_riscv_disas', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _riscv_disas = swig_import_helper()
    del swig_import_helper
else:
    import _riscv_disas
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

rv32 = _riscv_disas.rv32
rv64 = _riscv_disas.rv64
rv128 = _riscv_disas.rv128
rv_rm_rne = _riscv_disas.rv_rm_rne
rv_rm_rtz = _riscv_disas.rv_rm_rtz
rv_rm_rdn = _riscv_disas.rv_rm_rdn
rv_rm_rup = _riscv_disas.rv_rm_rup
rv_rm_rmm = _riscv_disas.rv_rm_rmm
rv_rm_dyn = _riscv_disas.rv_rm_dyn
rv_fence_i = _riscv_disas.rv_fence_i
rv_fence_o = _riscv_disas.rv_fence_o
rv_fence_r = _riscv_disas.rv_fence_r
rv_fence_w = _riscv_disas.rv_fence_w
rv_ireg_zero = _riscv_disas.rv_ireg_zero
rv_ireg_ra = _riscv_disas.rv_ireg_ra
rv_ireg_sp = _riscv_disas.rv_ireg_sp
rv_ireg_gp = _riscv_disas.rv_ireg_gp
rv_ireg_tp = _riscv_disas.rv_ireg_tp
rv_ireg_t0 = _riscv_disas.rv_ireg_t0
rv_ireg_t1 = _riscv_disas.rv_ireg_t1
rv_ireg_t2 = _riscv_disas.rv_ireg_t2
rv_ireg_s0 = _riscv_disas.rv_ireg_s0
rv_ireg_s1 = _riscv_disas.rv_ireg_s1
rv_ireg_a0 = _riscv_disas.rv_ireg_a0
rv_ireg_a1 = _riscv_disas.rv_ireg_a1
rv_ireg_a2 = _riscv_disas.rv_ireg_a2
rv_ireg_a3 = _riscv_disas.rv_ireg_a3
rv_ireg_a4 = _riscv_disas.rv_ireg_a4
rv_ireg_a5 = _riscv_disas.rv_ireg_a5
rv_ireg_a6 = _riscv_disas.rv_ireg_a6
rv_ireg_a7 = _riscv_disas.rv_ireg_a7
rv_ireg_s2 = _riscv_disas.rv_ireg_s2
rv_ireg_s3 = _riscv_disas.rv_ireg_s3
rv_ireg_s4 = _riscv_disas.rv_ireg_s4
rv_ireg_s5 = _riscv_disas.rv_ireg_s5
rv_ireg_s6 = _riscv_disas.rv_ireg_s6
rv_ireg_s7 = _riscv_disas.rv_ireg_s7
rv_ireg_s8 = _riscv_disas.rv_ireg_s8
rv_ireg_s9 = _riscv_disas.rv_ireg_s9
rv_ireg_s10 = _riscv_disas.rv_ireg_s10
rv_ireg_s11 = _riscv_disas.rv_ireg_s11
rv_ireg_t3 = _riscv_disas.rv_ireg_t3
rv_ireg_t4 = _riscv_disas.rv_ireg_t4
rv_ireg_t5 = _riscv_disas.rv_ireg_t5
rv_ireg_t6 = _riscv_disas.rv_ireg_t6
rvc_end = _riscv_disas.rvc_end
rvc_rd_eq_ra = _riscv_disas.rvc_rd_eq_ra
rvc_rd_eq_x0 = _riscv_disas.rvc_rd_eq_x0
rvc_rs1_eq_x0 = _riscv_disas.rvc_rs1_eq_x0
rvc_rs2_eq_x0 = _riscv_disas.rvc_rs2_eq_x0
rvc_rs2_eq_rs1 = _riscv_disas.rvc_rs2_eq_rs1
rvc_rs1_eq_ra = _riscv_disas.rvc_rs1_eq_ra
rvc_imm_eq_zero = _riscv_disas.rvc_imm_eq_zero
rvc_imm_eq_n1 = _riscv_disas.rvc_imm_eq_n1
rvc_imm_eq_p1 = _riscv_disas.rvc_imm_eq_p1
rvc_csr_eq_0x001 = _riscv_disas.rvc_csr_eq_0x001
rvc_csr_eq_0x002 = _riscv_disas.rvc_csr_eq_0x002
rvc_csr_eq_0x003 = _riscv_disas.rvc_csr_eq_0x003
rvc_csr_eq_0xc00 = _riscv_disas.rvc_csr_eq_0xc00
rvc_csr_eq_0xc01 = _riscv_disas.rvc_csr_eq_0xc01
rvc_csr_eq_0xc02 = _riscv_disas.rvc_csr_eq_0xc02
rvc_csr_eq_0xc80 = _riscv_disas.rvc_csr_eq_0xc80
rvc_csr_eq_0xc81 = _riscv_disas.rvc_csr_eq_0xc81
rvc_csr_eq_0xc82 = _riscv_disas.rvc_csr_eq_0xc82
rv_codec_illegal = _riscv_disas.rv_codec_illegal
rv_codec_none = _riscv_disas.rv_codec_none
rv_codec_u = _riscv_disas.rv_codec_u
rv_codec_uj = _riscv_disas.rv_codec_uj
rv_codec_i = _riscv_disas.rv_codec_i
rv_codec_i_sh5 = _riscv_disas.rv_codec_i_sh5
rv_codec_i_sh6 = _riscv_disas.rv_codec_i_sh6
rv_codec_i_sh7 = _riscv_disas.rv_codec_i_sh7
rv_codec_i_csr = _riscv_disas.rv_codec_i_csr
rv_codec_s = _riscv_disas.rv_codec_s
rv_codec_sb = _riscv_disas.rv_codec_sb
rv_codec_r = _riscv_disas.rv_codec_r
rv_codec_r_m = _riscv_disas.rv_codec_r_m
rv_codec_r4_m = _riscv_disas.rv_codec_r4_m
rv_codec_r_a = _riscv_disas.rv_codec_r_a
rv_codec_r_l = _riscv_disas.rv_codec_r_l
rv_codec_r_f = _riscv_disas.rv_codec_r_f
rv_codec_cb = _riscv_disas.rv_codec_cb
rv_codec_cb_imm = _riscv_disas.rv_codec_cb_imm
rv_codec_cb_sh5 = _riscv_disas.rv_codec_cb_sh5
rv_codec_cb_sh6 = _riscv_disas.rv_codec_cb_sh6
rv_codec_ci = _riscv_disas.rv_codec_ci
rv_codec_ci_sh5 = _riscv_disas.rv_codec_ci_sh5
rv_codec_ci_sh6 = _riscv_disas.rv_codec_ci_sh6
rv_codec_ci_16sp = _riscv_disas.rv_codec_ci_16sp
rv_codec_ci_lwsp = _riscv_disas.rv_codec_ci_lwsp
rv_codec_ci_ldsp = _riscv_disas.rv_codec_ci_ldsp
rv_codec_ci_lqsp = _riscv_disas.rv_codec_ci_lqsp
rv_codec_ci_li = _riscv_disas.rv_codec_ci_li
rv_codec_ci_lui = _riscv_disas.rv_codec_ci_lui
rv_codec_ci_none = _riscv_disas.rv_codec_ci_none
rv_codec_ciw_4spn = _riscv_disas.rv_codec_ciw_4spn
rv_codec_cj = _riscv_disas.rv_codec_cj
rv_codec_cj_jal = _riscv_disas.rv_codec_cj_jal
rv_codec_cl_lw = _riscv_disas.rv_codec_cl_lw
rv_codec_cl_ld = _riscv_disas.rv_codec_cl_ld
rv_codec_cl_lq = _riscv_disas.rv_codec_cl_lq
rv_codec_cr = _riscv_disas.rv_codec_cr
rv_codec_cr_mv = _riscv_disas.rv_codec_cr_mv
rv_codec_cr_jalr = _riscv_disas.rv_codec_cr_jalr
rv_codec_cr_jr = _riscv_disas.rv_codec_cr_jr
rv_codec_cs = _riscv_disas.rv_codec_cs
rv_codec_cs_sw = _riscv_disas.rv_codec_cs_sw
rv_codec_cs_sd = _riscv_disas.rv_codec_cs_sd
rv_codec_cs_sq = _riscv_disas.rv_codec_cs_sq
rv_codec_css_swsp = _riscv_disas.rv_codec_css_swsp
rv_codec_css_sdsp = _riscv_disas.rv_codec_css_sdsp
rv_codec_css_sqsp = _riscv_disas.rv_codec_css_sqsp
rv_op_illegal = _riscv_disas.rv_op_illegal
rv_op_lui = _riscv_disas.rv_op_lui
rv_op_auipc = _riscv_disas.rv_op_auipc
rv_op_jal = _riscv_disas.rv_op_jal
rv_op_jalr = _riscv_disas.rv_op_jalr
rv_op_beq = _riscv_disas.rv_op_beq
rv_op_bne = _riscv_disas.rv_op_bne
rv_op_blt = _riscv_disas.rv_op_blt
rv_op_bge = _riscv_disas.rv_op_bge
rv_op_bltu = _riscv_disas.rv_op_bltu
rv_op_bgeu = _riscv_disas.rv_op_bgeu
rv_op_lb = _riscv_disas.rv_op_lb
rv_op_lh = _riscv_disas.rv_op_lh
rv_op_lw = _riscv_disas.rv_op_lw
rv_op_lbu = _riscv_disas.rv_op_lbu
rv_op_lhu = _riscv_disas.rv_op_lhu
rv_op_sb = _riscv_disas.rv_op_sb
rv_op_sh = _riscv_disas.rv_op_sh
rv_op_sw = _riscv_disas.rv_op_sw
rv_op_addi = _riscv_disas.rv_op_addi
rv_op_slti = _riscv_disas.rv_op_slti
rv_op_sltiu = _riscv_disas.rv_op_sltiu
rv_op_xori = _riscv_disas.rv_op_xori
rv_op_ori = _riscv_disas.rv_op_ori
rv_op_andi = _riscv_disas.rv_op_andi
rv_op_slli = _riscv_disas.rv_op_slli
rv_op_srli = _riscv_disas.rv_op_srli
rv_op_srai = _riscv_disas.rv_op_srai
rv_op_add = _riscv_disas.rv_op_add
rv_op_sub = _riscv_disas.rv_op_sub
rv_op_sll = _riscv_disas.rv_op_sll
rv_op_slt = _riscv_disas.rv_op_slt
rv_op_sltu = _riscv_disas.rv_op_sltu
rv_op_xor = _riscv_disas.rv_op_xor
rv_op_srl = _riscv_disas.rv_op_srl
rv_op_sra = _riscv_disas.rv_op_sra
rv_op_or = _riscv_disas.rv_op_or
rv_op_and = _riscv_disas.rv_op_and
rv_op_fence = _riscv_disas.rv_op_fence
rv_op_fence_i = _riscv_disas.rv_op_fence_i
rv_op_lwu = _riscv_disas.rv_op_lwu
rv_op_ld = _riscv_disas.rv_op_ld
rv_op_sd = _riscv_disas.rv_op_sd
rv_op_addiw = _riscv_disas.rv_op_addiw
rv_op_slliw = _riscv_disas.rv_op_slliw
rv_op_srliw = _riscv_disas.rv_op_srliw
rv_op_sraiw = _riscv_disas.rv_op_sraiw
rv_op_addw = _riscv_disas.rv_op_addw
rv_op_subw = _riscv_disas.rv_op_subw
rv_op_sllw = _riscv_disas.rv_op_sllw
rv_op_srlw = _riscv_disas.rv_op_srlw
rv_op_sraw = _riscv_disas.rv_op_sraw
rv_op_ldu = _riscv_disas.rv_op_ldu
rv_op_lq = _riscv_disas.rv_op_lq
rv_op_sq = _riscv_disas.rv_op_sq
rv_op_addid = _riscv_disas.rv_op_addid
rv_op_sllid = _riscv_disas.rv_op_sllid
rv_op_srlid = _riscv_disas.rv_op_srlid
rv_op_sraid = _riscv_disas.rv_op_sraid
rv_op_addd = _riscv_disas.rv_op_addd
rv_op_subd = _riscv_disas.rv_op_subd
rv_op_slld = _riscv_disas.rv_op_slld
rv_op_srld = _riscv_disas.rv_op_srld
rv_op_srad = _riscv_disas.rv_op_srad
rv_op_mul = _riscv_disas.rv_op_mul
rv_op_mulh = _riscv_disas.rv_op_mulh
rv_op_mulhsu = _riscv_disas.rv_op_mulhsu
rv_op_mulhu = _riscv_disas.rv_op_mulhu
rv_op_div = _riscv_disas.rv_op_div
rv_op_divu = _riscv_disas.rv_op_divu
rv_op_rem = _riscv_disas.rv_op_rem
rv_op_remu = _riscv_disas.rv_op_remu
rv_op_mulw = _riscv_disas.rv_op_mulw
rv_op_divw = _riscv_disas.rv_op_divw
rv_op_divuw = _riscv_disas.rv_op_divuw
rv_op_remw = _riscv_disas.rv_op_remw
rv_op_remuw = _riscv_disas.rv_op_remuw
rv_op_muld = _riscv_disas.rv_op_muld
rv_op_divd = _riscv_disas.rv_op_divd
rv_op_divud = _riscv_disas.rv_op_divud
rv_op_remd = _riscv_disas.rv_op_remd
rv_op_remud = _riscv_disas.rv_op_remud
rv_op_lr_w = _riscv_disas.rv_op_lr_w
rv_op_sc_w = _riscv_disas.rv_op_sc_w
rv_op_amoswap_w = _riscv_disas.rv_op_amoswap_w
rv_op_amoadd_w = _riscv_disas.rv_op_amoadd_w
rv_op_amoxor_w = _riscv_disas.rv_op_amoxor_w
rv_op_amoor_w = _riscv_disas.rv_op_amoor_w
rv_op_amoand_w = _riscv_disas.rv_op_amoand_w
rv_op_amomin_w = _riscv_disas.rv_op_amomin_w
rv_op_amomax_w = _riscv_disas.rv_op_amomax_w
rv_op_amominu_w = _riscv_disas.rv_op_amominu_w
rv_op_amomaxu_w = _riscv_disas.rv_op_amomaxu_w
rv_op_lr_d = _riscv_disas.rv_op_lr_d
rv_op_sc_d = _riscv_disas.rv_op_sc_d
rv_op_amoswap_d = _riscv_disas.rv_op_amoswap_d
rv_op_amoadd_d = _riscv_disas.rv_op_amoadd_d
rv_op_amoxor_d = _riscv_disas.rv_op_amoxor_d
rv_op_amoor_d = _riscv_disas.rv_op_amoor_d
rv_op_amoand_d = _riscv_disas.rv_op_amoand_d
rv_op_amomin_d = _riscv_disas.rv_op_amomin_d
rv_op_amomax_d = _riscv_disas.rv_op_amomax_d
rv_op_amominu_d = _riscv_disas.rv_op_amominu_d
rv_op_amomaxu_d = _riscv_disas.rv_op_amomaxu_d
rv_op_lr_q = _riscv_disas.rv_op_lr_q
rv_op_sc_q = _riscv_disas.rv_op_sc_q
rv_op_amoswap_q = _riscv_disas.rv_op_amoswap_q
rv_op_amoadd_q = _riscv_disas.rv_op_amoadd_q
rv_op_amoxor_q = _riscv_disas.rv_op_amoxor_q
rv_op_amoor_q = _riscv_disas.rv_op_amoor_q
rv_op_amoand_q = _riscv_disas.rv_op_amoand_q
rv_op_amomin_q = _riscv_disas.rv_op_amomin_q
rv_op_amomax_q = _riscv_disas.rv_op_amomax_q
rv_op_amominu_q = _riscv_disas.rv_op_amominu_q
rv_op_amomaxu_q = _riscv_disas.rv_op_amomaxu_q
rv_op_ecall = _riscv_disas.rv_op_ecall
rv_op_ebreak = _riscv_disas.rv_op_ebreak
rv_op_uret = _riscv_disas.rv_op_uret
rv_op_sret = _riscv_disas.rv_op_sret
rv_op_hret = _riscv_disas.rv_op_hret
rv_op_mret = _riscv_disas.rv_op_mret
rv_op_dret = _riscv_disas.rv_op_dret
rv_op_sfence_vm = _riscv_disas.rv_op_sfence_vm
rv_op_sfence_vma = _riscv_disas.rv_op_sfence_vma
rv_op_wfi = _riscv_disas.rv_op_wfi
rv_op_csrrw = _riscv_disas.rv_op_csrrw
rv_op_csrrs = _riscv_disas.rv_op_csrrs
rv_op_csrrc = _riscv_disas.rv_op_csrrc
rv_op_csrrwi = _riscv_disas.rv_op_csrrwi
rv_op_csrrsi = _riscv_disas.rv_op_csrrsi
rv_op_csrrci = _riscv_disas.rv_op_csrrci
rv_op_flw = _riscv_disas.rv_op_flw
rv_op_fsw = _riscv_disas.rv_op_fsw
rv_op_fmadd_s = _riscv_disas.rv_op_fmadd_s
rv_op_fmsub_s = _riscv_disas.rv_op_fmsub_s
rv_op_fnmsub_s = _riscv_disas.rv_op_fnmsub_s
rv_op_fnmadd_s = _riscv_disas.rv_op_fnmadd_s
rv_op_fadd_s = _riscv_disas.rv_op_fadd_s
rv_op_fsub_s = _riscv_disas.rv_op_fsub_s
rv_op_fmul_s = _riscv_disas.rv_op_fmul_s
rv_op_fdiv_s = _riscv_disas.rv_op_fdiv_s
rv_op_fsgnj_s = _riscv_disas.rv_op_fsgnj_s
rv_op_fsgnjn_s = _riscv_disas.rv_op_fsgnjn_s
rv_op_fsgnjx_s = _riscv_disas.rv_op_fsgnjx_s
rv_op_fmin_s = _riscv_disas.rv_op_fmin_s
rv_op_fmax_s = _riscv_disas.rv_op_fmax_s
rv_op_fsqrt_s = _riscv_disas.rv_op_fsqrt_s
rv_op_fle_s = _riscv_disas.rv_op_fle_s
rv_op_flt_s = _riscv_disas.rv_op_flt_s
rv_op_feq_s = _riscv_disas.rv_op_feq_s
rv_op_fcvt_w_s = _riscv_disas.rv_op_fcvt_w_s
rv_op_fcvt_wu_s = _riscv_disas.rv_op_fcvt_wu_s
rv_op_fcvt_s_w = _riscv_disas.rv_op_fcvt_s_w
rv_op_fcvt_s_wu = _riscv_disas.rv_op_fcvt_s_wu
rv_op_fmv_x_s = _riscv_disas.rv_op_fmv_x_s
rv_op_fclass_s = _riscv_disas.rv_op_fclass_s
rv_op_fmv_s_x = _riscv_disas.rv_op_fmv_s_x
rv_op_fcvt_l_s = _riscv_disas.rv_op_fcvt_l_s
rv_op_fcvt_lu_s = _riscv_disas.rv_op_fcvt_lu_s
rv_op_fcvt_s_l = _riscv_disas.rv_op_fcvt_s_l
rv_op_fcvt_s_lu = _riscv_disas.rv_op_fcvt_s_lu
rv_op_fld = _riscv_disas.rv_op_fld
rv_op_fsd = _riscv_disas.rv_op_fsd
rv_op_fmadd_d = _riscv_disas.rv_op_fmadd_d
rv_op_fmsub_d = _riscv_disas.rv_op_fmsub_d
rv_op_fnmsub_d = _riscv_disas.rv_op_fnmsub_d
rv_op_fnmadd_d = _riscv_disas.rv_op_fnmadd_d
rv_op_fadd_d = _riscv_disas.rv_op_fadd_d
rv_op_fsub_d = _riscv_disas.rv_op_fsub_d
rv_op_fmul_d = _riscv_disas.rv_op_fmul_d
rv_op_fdiv_d = _riscv_disas.rv_op_fdiv_d
rv_op_fsgnj_d = _riscv_disas.rv_op_fsgnj_d
rv_op_fsgnjn_d = _riscv_disas.rv_op_fsgnjn_d
rv_op_fsgnjx_d = _riscv_disas.rv_op_fsgnjx_d
rv_op_fmin_d = _riscv_disas.rv_op_fmin_d
rv_op_fmax_d = _riscv_disas.rv_op_fmax_d
rv_op_fcvt_s_d = _riscv_disas.rv_op_fcvt_s_d
rv_op_fcvt_d_s = _riscv_disas.rv_op_fcvt_d_s
rv_op_fsqrt_d = _riscv_disas.rv_op_fsqrt_d
rv_op_fle_d = _riscv_disas.rv_op_fle_d
rv_op_flt_d = _riscv_disas.rv_op_flt_d
rv_op_feq_d = _riscv_disas.rv_op_feq_d
rv_op_fcvt_w_d = _riscv_disas.rv_op_fcvt_w_d
rv_op_fcvt_wu_d = _riscv_disas.rv_op_fcvt_wu_d
rv_op_fcvt_d_w = _riscv_disas.rv_op_fcvt_d_w
rv_op_fcvt_d_wu = _riscv_disas.rv_op_fcvt_d_wu
rv_op_fclass_d = _riscv_disas.rv_op_fclass_d
rv_op_fcvt_l_d = _riscv_disas.rv_op_fcvt_l_d
rv_op_fcvt_lu_d = _riscv_disas.rv_op_fcvt_lu_d
rv_op_fmv_x_d = _riscv_disas.rv_op_fmv_x_d
rv_op_fcvt_d_l = _riscv_disas.rv_op_fcvt_d_l
rv_op_fcvt_d_lu = _riscv_disas.rv_op_fcvt_d_lu
rv_op_fmv_d_x = _riscv_disas.rv_op_fmv_d_x
rv_op_flq = _riscv_disas.rv_op_flq
rv_op_fsq = _riscv_disas.rv_op_fsq
rv_op_fmadd_q = _riscv_disas.rv_op_fmadd_q
rv_op_fmsub_q = _riscv_disas.rv_op_fmsub_q
rv_op_fnmsub_q = _riscv_disas.rv_op_fnmsub_q
rv_op_fnmadd_q = _riscv_disas.rv_op_fnmadd_q
rv_op_fadd_q = _riscv_disas.rv_op_fadd_q
rv_op_fsub_q = _riscv_disas.rv_op_fsub_q
rv_op_fmul_q = _riscv_disas.rv_op_fmul_q
rv_op_fdiv_q = _riscv_disas.rv_op_fdiv_q
rv_op_fsgnj_q = _riscv_disas.rv_op_fsgnj_q
rv_op_fsgnjn_q = _riscv_disas.rv_op_fsgnjn_q
rv_op_fsgnjx_q = _riscv_disas.rv_op_fsgnjx_q
rv_op_fmin_q = _riscv_disas.rv_op_fmin_q
rv_op_fmax_q = _riscv_disas.rv_op_fmax_q
rv_op_fcvt_s_q = _riscv_disas.rv_op_fcvt_s_q
rv_op_fcvt_q_s = _riscv_disas.rv_op_fcvt_q_s
rv_op_fcvt_d_q = _riscv_disas.rv_op_fcvt_d_q
rv_op_fcvt_q_d = _riscv_disas.rv_op_fcvt_q_d
rv_op_fsqrt_q = _riscv_disas.rv_op_fsqrt_q
rv_op_fle_q = _riscv_disas.rv_op_fle_q
rv_op_flt_q = _riscv_disas.rv_op_flt_q
rv_op_feq_q = _riscv_disas.rv_op_feq_q
rv_op_fcvt_w_q = _riscv_disas.rv_op_fcvt_w_q
rv_op_fcvt_wu_q = _riscv_disas.rv_op_fcvt_wu_q
rv_op_fcvt_q_w = _riscv_disas.rv_op_fcvt_q_w
rv_op_fcvt_q_wu = _riscv_disas.rv_op_fcvt_q_wu
rv_op_fclass_q = _riscv_disas.rv_op_fclass_q
rv_op_fcvt_l_q = _riscv_disas.rv_op_fcvt_l_q
rv_op_fcvt_lu_q = _riscv_disas.rv_op_fcvt_lu_q
rv_op_fcvt_q_l = _riscv_disas.rv_op_fcvt_q_l
rv_op_fcvt_q_lu = _riscv_disas.rv_op_fcvt_q_lu
rv_op_fmv_x_q = _riscv_disas.rv_op_fmv_x_q
rv_op_fmv_q_x = _riscv_disas.rv_op_fmv_q_x
rv_op_c_addi4spn = _riscv_disas.rv_op_c_addi4spn
rv_op_c_fld = _riscv_disas.rv_op_c_fld
rv_op_c_lw = _riscv_disas.rv_op_c_lw
rv_op_c_flw = _riscv_disas.rv_op_c_flw
rv_op_c_fsd = _riscv_disas.rv_op_c_fsd
rv_op_c_sw = _riscv_disas.rv_op_c_sw
rv_op_c_fsw = _riscv_disas.rv_op_c_fsw
rv_op_c_nop = _riscv_disas.rv_op_c_nop
rv_op_c_addi = _riscv_disas.rv_op_c_addi
rv_op_c_jal = _riscv_disas.rv_op_c_jal
rv_op_c_li = _riscv_disas.rv_op_c_li
rv_op_c_addi16sp = _riscv_disas.rv_op_c_addi16sp
rv_op_c_lui = _riscv_disas.rv_op_c_lui
rv_op_c_srli = _riscv_disas.rv_op_c_srli
rv_op_c_srai = _riscv_disas.rv_op_c_srai
rv_op_c_andi = _riscv_disas.rv_op_c_andi
rv_op_c_sub = _riscv_disas.rv_op_c_sub
rv_op_c_xor = _riscv_disas.rv_op_c_xor
rv_op_c_or = _riscv_disas.rv_op_c_or
rv_op_c_and = _riscv_disas.rv_op_c_and
rv_op_c_subw = _riscv_disas.rv_op_c_subw
rv_op_c_addw = _riscv_disas.rv_op_c_addw
rv_op_c_j = _riscv_disas.rv_op_c_j
rv_op_c_beqz = _riscv_disas.rv_op_c_beqz
rv_op_c_bnez = _riscv_disas.rv_op_c_bnez
rv_op_c_slli = _riscv_disas.rv_op_c_slli
rv_op_c_fldsp = _riscv_disas.rv_op_c_fldsp
rv_op_c_lwsp = _riscv_disas.rv_op_c_lwsp
rv_op_c_flwsp = _riscv_disas.rv_op_c_flwsp
rv_op_c_jr = _riscv_disas.rv_op_c_jr
rv_op_c_mv = _riscv_disas.rv_op_c_mv
rv_op_c_ebreak = _riscv_disas.rv_op_c_ebreak
rv_op_c_jalr = _riscv_disas.rv_op_c_jalr
rv_op_c_add = _riscv_disas.rv_op_c_add
rv_op_c_fsdsp = _riscv_disas.rv_op_c_fsdsp
rv_op_c_swsp = _riscv_disas.rv_op_c_swsp
rv_op_c_fswsp = _riscv_disas.rv_op_c_fswsp
rv_op_c_ld = _riscv_disas.rv_op_c_ld
rv_op_c_sd = _riscv_disas.rv_op_c_sd
rv_op_c_addiw = _riscv_disas.rv_op_c_addiw
rv_op_c_ldsp = _riscv_disas.rv_op_c_ldsp
rv_op_c_sdsp = _riscv_disas.rv_op_c_sdsp
rv_op_c_lq = _riscv_disas.rv_op_c_lq
rv_op_c_sq = _riscv_disas.rv_op_c_sq
rv_op_c_lqsp = _riscv_disas.rv_op_c_lqsp
rv_op_c_sqsp = _riscv_disas.rv_op_c_sqsp
rv_op_nop = _riscv_disas.rv_op_nop
rv_op_mv = _riscv_disas.rv_op_mv
rv_op_not = _riscv_disas.rv_op_not
rv_op_neg = _riscv_disas.rv_op_neg
rv_op_negw = _riscv_disas.rv_op_negw
rv_op_sext_w = _riscv_disas.rv_op_sext_w
rv_op_seqz = _riscv_disas.rv_op_seqz
rv_op_snez = _riscv_disas.rv_op_snez
rv_op_sltz = _riscv_disas.rv_op_sltz
rv_op_sgtz = _riscv_disas.rv_op_sgtz
rv_op_fmv_s = _riscv_disas.rv_op_fmv_s
rv_op_fabs_s = _riscv_disas.rv_op_fabs_s
rv_op_fneg_s = _riscv_disas.rv_op_fneg_s
rv_op_fmv_d = _riscv_disas.rv_op_fmv_d
rv_op_fabs_d = _riscv_disas.rv_op_fabs_d
rv_op_fneg_d = _riscv_disas.rv_op_fneg_d
rv_op_fmv_q = _riscv_disas.rv_op_fmv_q
rv_op_fabs_q = _riscv_disas.rv_op_fabs_q
rv_op_fneg_q = _riscv_disas.rv_op_fneg_q
rv_op_beqz = _riscv_disas.rv_op_beqz
rv_op_bnez = _riscv_disas.rv_op_bnez
rv_op_blez = _riscv_disas.rv_op_blez
rv_op_bgez = _riscv_disas.rv_op_bgez
rv_op_bltz = _riscv_disas.rv_op_bltz
rv_op_bgtz = _riscv_disas.rv_op_bgtz
rv_op_ble = _riscv_disas.rv_op_ble
rv_op_bleu = _riscv_disas.rv_op_bleu
rv_op_bgt = _riscv_disas.rv_op_bgt
rv_op_bgtu = _riscv_disas.rv_op_bgtu
rv_op_j = _riscv_disas.rv_op_j
rv_op_ret = _riscv_disas.rv_op_ret
rv_op_jr = _riscv_disas.rv_op_jr
rv_op_rdcycle = _riscv_disas.rv_op_rdcycle
rv_op_rdtime = _riscv_disas.rv_op_rdtime
rv_op_rdinstret = _riscv_disas.rv_op_rdinstret
rv_op_rdcycleh = _riscv_disas.rv_op_rdcycleh
rv_op_rdtimeh = _riscv_disas.rv_op_rdtimeh
rv_op_rdinstreth = _riscv_disas.rv_op_rdinstreth
rv_op_frcsr = _riscv_disas.rv_op_frcsr
rv_op_frrm = _riscv_disas.rv_op_frrm
rv_op_frflags = _riscv_disas.rv_op_frflags
rv_op_fscsr = _riscv_disas.rv_op_fscsr
rv_op_fsrm = _riscv_disas.rv_op_fsrm
rv_op_fsflags = _riscv_disas.rv_op_fsflags
rv_op_fsrmi = _riscv_disas.rv_op_fsrmi
rv_op_fsflagsi = _riscv_disas.rv_op_fsflagsi
class rv_decode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rv_decode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rv_decode, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pc"] = _riscv_disas.rv_decode_pc_set
    __swig_getmethods__["pc"] = _riscv_disas.rv_decode_pc_get
    if _newclass:
        pc = _swig_property(_riscv_disas.rv_decode_pc_get, _riscv_disas.rv_decode_pc_set)
    __swig_setmethods__["inst"] = _riscv_disas.rv_decode_inst_set
    __swig_getmethods__["inst"] = _riscv_disas.rv_decode_inst_get
    if _newclass:
        inst = _swig_property(_riscv_disas.rv_decode_inst_get, _riscv_disas.rv_decode_inst_set)
    __swig_setmethods__["imm"] = _riscv_disas.rv_decode_imm_set
    __swig_getmethods__["imm"] = _riscv_disas.rv_decode_imm_get
    if _newclass:
        imm = _swig_property(_riscv_disas.rv_decode_imm_get, _riscv_disas.rv_decode_imm_set)
    __swig_setmethods__["op"] = _riscv_disas.rv_decode_op_set
    __swig_getmethods__["op"] = _riscv_disas.rv_decode_op_get
    if _newclass:
        op = _swig_property(_riscv_disas.rv_decode_op_get, _riscv_disas.rv_decode_op_set)
    __swig_setmethods__["codec"] = _riscv_disas.rv_decode_codec_set
    __swig_getmethods__["codec"] = _riscv_disas.rv_decode_codec_get
    if _newclass:
        codec = _swig_property(_riscv_disas.rv_decode_codec_get, _riscv_disas.rv_decode_codec_set)
    __swig_setmethods__["rd"] = _riscv_disas.rv_decode_rd_set
    __swig_getmethods__["rd"] = _riscv_disas.rv_decode_rd_get
    if _newclass:
        rd = _swig_property(_riscv_disas.rv_decode_rd_get, _riscv_disas.rv_decode_rd_set)
    __swig_setmethods__["rs1"] = _riscv_disas.rv_decode_rs1_set
    __swig_getmethods__["rs1"] = _riscv_disas.rv_decode_rs1_get
    if _newclass:
        rs1 = _swig_property(_riscv_disas.rv_decode_rs1_get, _riscv_disas.rv_decode_rs1_set)
    __swig_setmethods__["rs2"] = _riscv_disas.rv_decode_rs2_set
    __swig_getmethods__["rs2"] = _riscv_disas.rv_decode_rs2_get
    if _newclass:
        rs2 = _swig_property(_riscv_disas.rv_decode_rs2_get, _riscv_disas.rv_decode_rs2_set)
    __swig_setmethods__["rs3"] = _riscv_disas.rv_decode_rs3_set
    __swig_getmethods__["rs3"] = _riscv_disas.rv_decode_rs3_get
    if _newclass:
        rs3 = _swig_property(_riscv_disas.rv_decode_rs3_get, _riscv_disas.rv_decode_rs3_set)
    __swig_setmethods__["rm"] = _riscv_disas.rv_decode_rm_set
    __swig_getmethods__["rm"] = _riscv_disas.rv_decode_rm_get
    if _newclass:
        rm = _swig_property(_riscv_disas.rv_decode_rm_get, _riscv_disas.rv_decode_rm_set)
    __swig_setmethods__["pred"] = _riscv_disas.rv_decode_pred_set
    __swig_getmethods__["pred"] = _riscv_disas.rv_decode_pred_get
    if _newclass:
        pred = _swig_property(_riscv_disas.rv_decode_pred_get, _riscv_disas.rv_decode_pred_set)
    __swig_setmethods__["succ"] = _riscv_disas.rv_decode_succ_set
    __swig_getmethods__["succ"] = _riscv_disas.rv_decode_succ_get
    if _newclass:
        succ = _swig_property(_riscv_disas.rv_decode_succ_get, _riscv_disas.rv_decode_succ_set)
    __swig_setmethods__["aq"] = _riscv_disas.rv_decode_aq_set
    __swig_getmethods__["aq"] = _riscv_disas.rv_decode_aq_get
    if _newclass:
        aq = _swig_property(_riscv_disas.rv_decode_aq_get, _riscv_disas.rv_decode_aq_set)
    __swig_setmethods__["rl"] = _riscv_disas.rv_decode_rl_set
    __swig_getmethods__["rl"] = _riscv_disas.rv_decode_rl_get
    if _newclass:
        rl = _swig_property(_riscv_disas.rv_decode_rl_get, _riscv_disas.rv_decode_rl_set)

    def __init__(self):
        this = _riscv_disas.new_rv_decode()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _riscv_disas.delete_rv_decode
    __del__ = lambda self: None
rv_decode_swigregister = _riscv_disas.rv_decode_swigregister
rv_decode_swigregister(rv_decode)

class rv_comp_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rv_comp_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rv_comp_data, name)
    __repr__ = _swig_repr
    __swig_getmethods__["op"] = _riscv_disas.rv_comp_data_op_get
    if _newclass:
        op = _swig_property(_riscv_disas.rv_comp_data_op_get)
    __swig_setmethods__["constraints"] = _riscv_disas.rv_comp_data_constraints_set
    __swig_getmethods__["constraints"] = _riscv_disas.rv_comp_data_constraints_get
    if _newclass:
        constraints = _swig_property(_riscv_disas.rv_comp_data_constraints_get, _riscv_disas.rv_comp_data_constraints_set)

    def __init__(self):
        this = _riscv_disas.new_rv_comp_data()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _riscv_disas.delete_rv_comp_data
    __del__ = lambda self: None
rv_comp_data_swigregister = _riscv_disas.rv_comp_data_swigregister
rv_comp_data_swigregister(rv_comp_data)

rvcd_imm_nz = _riscv_disas.rvcd_imm_nz
rvcd_imm_nz_hint = _riscv_disas.rvcd_imm_nz_hint
class rv_opcode_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rv_opcode_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rv_opcode_data, name)
    __repr__ = _swig_repr
    __swig_getmethods__["name"] = _riscv_disas.rv_opcode_data_name_get
    if _newclass:
        name = _swig_property(_riscv_disas.rv_opcode_data_name_get)
    __swig_getmethods__["codec"] = _riscv_disas.rv_opcode_data_codec_get
    if _newclass:
        codec = _swig_property(_riscv_disas.rv_opcode_data_codec_get)
    __swig_getmethods__["format"] = _riscv_disas.rv_opcode_data_format_get
    if _newclass:
        format = _swig_property(_riscv_disas.rv_opcode_data_format_get)
    __swig_setmethods__["pseudo"] = _riscv_disas.rv_opcode_data_pseudo_set
    __swig_getmethods__["pseudo"] = _riscv_disas.rv_opcode_data_pseudo_get
    if _newclass:
        pseudo = _swig_property(_riscv_disas.rv_opcode_data_pseudo_get, _riscv_disas.rv_opcode_data_pseudo_set)
    __swig_getmethods__["decomp_rv32"] = _riscv_disas.rv_opcode_data_decomp_rv32_get
    if _newclass:
        decomp_rv32 = _swig_property(_riscv_disas.rv_opcode_data_decomp_rv32_get)
    __swig_getmethods__["decomp_rv64"] = _riscv_disas.rv_opcode_data_decomp_rv64_get
    if _newclass:
        decomp_rv64 = _swig_property(_riscv_disas.rv_opcode_data_decomp_rv64_get)
    __swig_getmethods__["decomp_rv128"] = _riscv_disas.rv_opcode_data_decomp_rv128_get
    if _newclass:
        decomp_rv128 = _swig_property(_riscv_disas.rv_opcode_data_decomp_rv128_get)
    __swig_getmethods__["decomp_data"] = _riscv_disas.rv_opcode_data_decomp_data_get
    if _newclass:
        decomp_data = _swig_property(_riscv_disas.rv_opcode_data_decomp_data_get)

    def __init__(self):
        this = _riscv_disas.new_rv_opcode_data()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _riscv_disas.delete_rv_opcode_data
    __del__ = lambda self: None
rv_opcode_data_swigregister = _riscv_disas.rv_opcode_data_swigregister
rv_opcode_data_swigregister(rv_opcode_data)


def csr_name(csrno: 'int') -> "char const *":
    return _riscv_disas.csr_name(csrno)
csr_name = _riscv_disas.csr_name

def decode_inst_opcode(dec: 'rv_decode', isa: 'rv_isa') -> "void":
    return _riscv_disas.decode_inst_opcode(dec, isa)
decode_inst_opcode = _riscv_disas.decode_inst_opcode

def operand_rd(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_rd(inst)
operand_rd = _riscv_disas.operand_rd

def operand_rs1(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_rs1(inst)
operand_rs1 = _riscv_disas.operand_rs1

def operand_rs2(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_rs2(inst)
operand_rs2 = _riscv_disas.operand_rs2

def operand_rs3(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_rs3(inst)
operand_rs3 = _riscv_disas.operand_rs3

def operand_aq(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_aq(inst)
operand_aq = _riscv_disas.operand_aq

def operand_rl(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_rl(inst)
operand_rl = _riscv_disas.operand_rl

def operand_pred(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_pred(inst)
operand_pred = _riscv_disas.operand_pred

def operand_succ(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_succ(inst)
operand_succ = _riscv_disas.operand_succ

def operand_rm(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_rm(inst)
operand_rm = _riscv_disas.operand_rm

def operand_shamt5(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_shamt5(inst)
operand_shamt5 = _riscv_disas.operand_shamt5

def operand_shamt6(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_shamt6(inst)
operand_shamt6 = _riscv_disas.operand_shamt6

def operand_shamt7(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_shamt7(inst)
operand_shamt7 = _riscv_disas.operand_shamt7

def operand_crdq(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_crdq(inst)
operand_crdq = _riscv_disas.operand_crdq

def operand_crs1q(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_crs1q(inst)
operand_crs1q = _riscv_disas.operand_crs1q

def operand_crs1rdq(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_crs1rdq(inst)
operand_crs1rdq = _riscv_disas.operand_crs1rdq

def operand_crs2q(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_crs2q(inst)
operand_crs2q = _riscv_disas.operand_crs2q

def operand_crd(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_crd(inst)
operand_crd = _riscv_disas.operand_crd

def operand_crs1(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_crs1(inst)
operand_crs1 = _riscv_disas.operand_crs1

def operand_crs1rd(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_crs1rd(inst)
operand_crs1rd = _riscv_disas.operand_crs1rd

def operand_crs2(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_crs2(inst)
operand_crs2 = _riscv_disas.operand_crs2

def operand_cimmsh5(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmsh5(inst)
operand_cimmsh5 = _riscv_disas.operand_cimmsh5

def operand_csr12(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_csr12(inst)
operand_csr12 = _riscv_disas.operand_csr12

def operand_imm12(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_imm12(inst)
operand_imm12 = _riscv_disas.operand_imm12

def operand_imm20(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_imm20(inst)
operand_imm20 = _riscv_disas.operand_imm20

def operand_jimm20(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_jimm20(inst)
operand_jimm20 = _riscv_disas.operand_jimm20

def operand_simm12(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_simm12(inst)
operand_simm12 = _riscv_disas.operand_simm12

def operand_sbimm12(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_sbimm12(inst)
operand_sbimm12 = _riscv_disas.operand_sbimm12

def operand_cimmsh6(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmsh6(inst)
operand_cimmsh6 = _riscv_disas.operand_cimmsh6

def operand_cimmi(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_cimmi(inst)
operand_cimmi = _riscv_disas.operand_cimmi

def operand_cimmui(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_cimmui(inst)
operand_cimmui = _riscv_disas.operand_cimmui

def operand_cimmlwsp(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmlwsp(inst)
operand_cimmlwsp = _riscv_disas.operand_cimmlwsp

def operand_cimmldsp(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmldsp(inst)
operand_cimmldsp = _riscv_disas.operand_cimmldsp

def operand_cimmlqsp(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmlqsp(inst)
operand_cimmlqsp = _riscv_disas.operand_cimmlqsp

def operand_cimm16sp(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_cimm16sp(inst)
operand_cimm16sp = _riscv_disas.operand_cimm16sp

def operand_cimmj(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_cimmj(inst)
operand_cimmj = _riscv_disas.operand_cimmj

def operand_cimmb(inst: 'rv_inst') -> "int32_t":
    return _riscv_disas.operand_cimmb(inst)
operand_cimmb = _riscv_disas.operand_cimmb

def operand_cimmswsp(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmswsp(inst)
operand_cimmswsp = _riscv_disas.operand_cimmswsp

def operand_cimmsdsp(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmsdsp(inst)
operand_cimmsdsp = _riscv_disas.operand_cimmsdsp

def operand_cimmsqsp(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmsqsp(inst)
operand_cimmsqsp = _riscv_disas.operand_cimmsqsp

def operand_cimm4spn(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimm4spn(inst)
operand_cimm4spn = _riscv_disas.operand_cimm4spn

def operand_cimmw(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmw(inst)
operand_cimmw = _riscv_disas.operand_cimmw

def operand_cimmd(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmd(inst)
operand_cimmd = _riscv_disas.operand_cimmd

def operand_cimmq(inst: 'rv_inst') -> "uint32_t":
    return _riscv_disas.operand_cimmq(inst)
operand_cimmq = _riscv_disas.operand_cimmq

def decode_inst_operands(dec: 'rv_decode') -> "void":
    return _riscv_disas.decode_inst_operands(dec)
decode_inst_operands = _riscv_disas.decode_inst_operands

def check_constraints(dec: 'rv_decode', c: 'rvc_constraint const *') -> "bool":
    return _riscv_disas.check_constraints(dec, c)
check_constraints = _riscv_disas.check_constraints

def inst_length(inst: 'rv_inst') -> "size_t":
    return _riscv_disas.inst_length(inst)
inst_length = _riscv_disas.inst_length

def append(s1: 'char *', s2: 'char const *', n: 'size_t') -> "void":
    return _riscv_disas.append(s1, s2, n)
append = _riscv_disas.append

def format_inst(buf: 'char *', buflen: 'size_t', tab: 'size_t', dec: 'rv_decode') -> "void":
    return _riscv_disas.format_inst(buf, buflen, tab, dec)
format_inst = _riscv_disas.format_inst

def decode_inst_lift_pseudo(dec: 'rv_decode') -> "void":
    return _riscv_disas.decode_inst_lift_pseudo(dec)
decode_inst_lift_pseudo = _riscv_disas.decode_inst_lift_pseudo

def decompress_inst_rv32(dec: 'rv_decode') -> "void":
    return _riscv_disas.decompress_inst_rv32(dec)
decompress_inst_rv32 = _riscv_disas.decompress_inst_rv32

def decompress_inst_rv64(dec: 'rv_decode') -> "void":
    return _riscv_disas.decompress_inst_rv64(dec)
decompress_inst_rv64 = _riscv_disas.decompress_inst_rv64

def decompress_inst_rv128(dec: 'rv_decode') -> "void":
    return _riscv_disas.decompress_inst_rv128(dec)
decompress_inst_rv128 = _riscv_disas.decompress_inst_rv128

def get_opcode_data(idx: 'int') -> "rv_opcode_data const *":
    return _riscv_disas.get_opcode_data(idx)
get_opcode_data = _riscv_disas.get_opcode_data

def disasm_inst(buf: 'char *', buflen: 'size_t', isa: 'rv_isa', pc: 'uint64_t', inst: 'rv_inst') -> "void":
    return _riscv_disas.disasm_inst(buf, buflen, isa, pc, inst)
disasm_inst = _riscv_disas.disasm_inst
class bufArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, bufArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, bufArray, name)
    __repr__ = _swig_repr

    def __init__(self, nelements: 'size_t'):
        this = _riscv_disas.new_bufArray(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _riscv_disas.delete_bufArray
    __del__ = lambda self: None

    def __getitem__(self, index: 'size_t') -> "char":
        return _riscv_disas.bufArray___getitem__(self, index)

    def __setitem__(self, index: 'size_t', value: 'char') -> "void":
        return _riscv_disas.bufArray___setitem__(self, index, value)

    def cast(self) -> "char *":
        return _riscv_disas.bufArray_cast(self)
    if _newclass:
        frompointer = staticmethod(_riscv_disas.bufArray_frompointer)
    else:
        frompointer = _riscv_disas.bufArray_frompointer
bufArray_swigregister = _riscv_disas.bufArray_swigregister
bufArray_swigregister(bufArray)
cvar = _riscv_disas.cvar
rv_ireg_name_sym = cvar.rv_ireg_name_sym
rv_freg_name_sym = cvar.rv_freg_name_sym
rv_fmt_none = cvar.rv_fmt_none
rv_fmt_rs1 = cvar.rv_fmt_rs1
rv_fmt_offset = cvar.rv_fmt_offset
rv_fmt_pred_succ = cvar.rv_fmt_pred_succ
rv_fmt_rs1_rs2 = cvar.rv_fmt_rs1_rs2
rv_fmt_rd_imm = cvar.rv_fmt_rd_imm
rv_fmt_rd_offset = cvar.rv_fmt_rd_offset
rv_fmt_rd_rs1_rs2 = cvar.rv_fmt_rd_rs1_rs2
rv_fmt_frd_rs1 = cvar.rv_fmt_frd_rs1
rv_fmt_rd_frs1 = cvar.rv_fmt_rd_frs1
rv_fmt_rd_frs1_frs2 = cvar.rv_fmt_rd_frs1_frs2
rv_fmt_frd_frs1_frs2 = cvar.rv_fmt_frd_frs1_frs2
rv_fmt_rm_frd_frs1 = cvar.rv_fmt_rm_frd_frs1
rv_fmt_rm_frd_rs1 = cvar.rv_fmt_rm_frd_rs1
rv_fmt_rm_rd_frs1 = cvar.rv_fmt_rm_rd_frs1
rv_fmt_rm_frd_frs1_frs2 = cvar.rv_fmt_rm_frd_frs1_frs2
rv_fmt_rm_frd_frs1_frs2_frs3 = cvar.rv_fmt_rm_frd_frs1_frs2_frs3
rv_fmt_rd_rs1_imm = cvar.rv_fmt_rd_rs1_imm
rv_fmt_rd_rs1_offset = cvar.rv_fmt_rd_rs1_offset
rv_fmt_rd_offset_rs1 = cvar.rv_fmt_rd_offset_rs1
rv_fmt_frd_offset_rs1 = cvar.rv_fmt_frd_offset_rs1
rv_fmt_rd_csr_rs1 = cvar.rv_fmt_rd_csr_rs1
rv_fmt_rd_csr_zimm = cvar.rv_fmt_rd_csr_zimm
rv_fmt_rs2_offset_rs1 = cvar.rv_fmt_rs2_offset_rs1
rv_fmt_frs2_offset_rs1 = cvar.rv_fmt_frs2_offset_rs1
rv_fmt_rs1_rs2_offset = cvar.rv_fmt_rs1_rs2_offset
rv_fmt_rs2_rs1_offset = cvar.rv_fmt_rs2_rs1_offset
rv_fmt_aqrl_rd_rs2_rs1 = cvar.rv_fmt_aqrl_rd_rs2_rs1
rv_fmt_aqrl_rd_rs1 = cvar.rv_fmt_aqrl_rd_rs1
rv_fmt_rd = cvar.rv_fmt_rd
rv_fmt_rd_zimm = cvar.rv_fmt_rd_zimm
rv_fmt_rd_rs1 = cvar.rv_fmt_rd_rs1
rv_fmt_rd_rs2 = cvar.rv_fmt_rd_rs2
rv_fmt_rs1_offset = cvar.rv_fmt_rs1_offset
rv_fmt_rs2_offset = cvar.rv_fmt_rs2_offset
rvcc_jal = cvar.rvcc_jal
rvcc_jalr = cvar.rvcc_jalr
rvcc_nop = cvar.rvcc_nop
rvcc_mv = cvar.rvcc_mv
rvcc_not = cvar.rvcc_not
rvcc_neg = cvar.rvcc_neg
rvcc_negw = cvar.rvcc_negw
rvcc_sext_w = cvar.rvcc_sext_w
rvcc_seqz = cvar.rvcc_seqz
rvcc_snez = cvar.rvcc_snez
rvcc_sltz = cvar.rvcc_sltz
rvcc_sgtz = cvar.rvcc_sgtz
rvcc_fmv_s = cvar.rvcc_fmv_s
rvcc_fabs_s = cvar.rvcc_fabs_s
rvcc_fneg_s = cvar.rvcc_fneg_s
rvcc_fmv_d = cvar.rvcc_fmv_d
rvcc_fabs_d = cvar.rvcc_fabs_d
rvcc_fneg_d = cvar.rvcc_fneg_d
rvcc_fmv_q = cvar.rvcc_fmv_q
rvcc_fabs_q = cvar.rvcc_fabs_q
rvcc_fneg_q = cvar.rvcc_fneg_q
rvcc_beqz = cvar.rvcc_beqz
rvcc_bnez = cvar.rvcc_bnez
rvcc_blez = cvar.rvcc_blez
rvcc_bgez = cvar.rvcc_bgez
rvcc_bltz = cvar.rvcc_bltz
rvcc_bgtz = cvar.rvcc_bgtz
rvcc_ble = cvar.rvcc_ble
rvcc_bleu = cvar.rvcc_bleu
rvcc_bgt = cvar.rvcc_bgt
rvcc_bgtu = cvar.rvcc_bgtu
rvcc_j = cvar.rvcc_j
rvcc_ret = cvar.rvcc_ret
rvcc_jr = cvar.rvcc_jr
rvcc_rdcycle = cvar.rvcc_rdcycle
rvcc_rdtime = cvar.rvcc_rdtime
rvcc_rdinstret = cvar.rvcc_rdinstret
rvcc_rdcycleh = cvar.rvcc_rdcycleh
rvcc_rdtimeh = cvar.rvcc_rdtimeh
rvcc_rdinstreth = cvar.rvcc_rdinstreth
rvcc_frcsr = cvar.rvcc_frcsr
rvcc_frrm = cvar.rvcc_frrm
rvcc_frflags = cvar.rvcc_frflags
rvcc_fscsr = cvar.rvcc_fscsr
rvcc_fsrm = cvar.rvcc_fsrm
rvcc_fsflags = cvar.rvcc_fsflags
rvcc_fsrmi = cvar.rvcc_fsrmi
rvcc_fsflagsi = cvar.rvcc_fsflagsi
rvcp_jal = cvar.rvcp_jal
rvcp_jalr = cvar.rvcp_jalr
rvcp_beq = cvar.rvcp_beq
rvcp_bne = cvar.rvcp_bne
rvcp_blt = cvar.rvcp_blt
rvcp_bge = cvar.rvcp_bge
rvcp_bltu = cvar.rvcp_bltu
rvcp_bgeu = cvar.rvcp_bgeu
rvcp_addi = cvar.rvcp_addi
rvcp_sltiu = cvar.rvcp_sltiu
rvcp_xori = cvar.rvcp_xori
rvcp_sub = cvar.rvcp_sub
rvcp_slt = cvar.rvcp_slt
rvcp_sltu = cvar.rvcp_sltu
rvcp_addiw = cvar.rvcp_addiw
rvcp_subw = cvar.rvcp_subw
rvcp_csrrw = cvar.rvcp_csrrw
rvcp_csrrs = cvar.rvcp_csrrs
rvcp_csrrwi = cvar.rvcp_csrrwi
rvcp_fsgnj_s = cvar.rvcp_fsgnj_s
rvcp_fsgnjn_s = cvar.rvcp_fsgnjn_s
rvcp_fsgnjx_s = cvar.rvcp_fsgnjx_s
rvcp_fsgnj_d = cvar.rvcp_fsgnj_d
rvcp_fsgnjn_d = cvar.rvcp_fsgnjn_d
rvcp_fsgnjx_d = cvar.rvcp_fsgnjx_d
rvcp_fsgnj_q = cvar.rvcp_fsgnj_q
rvcp_fsgnjn_q = cvar.rvcp_fsgnjn_q
rvcp_fsgnjx_q = cvar.rvcp_fsgnjx_q
opcode_data = cvar.opcode_data

def bufArray_frompointer(t: 'char *') -> "bufArray *":
    return _riscv_disas.bufArray_frompointer(t)
bufArray_frompointer = _riscv_disas.bufArray_frompointer

# This file is compatible with both classic and new-style classes.


